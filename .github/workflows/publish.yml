name: Publish Package to npm

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js with auth
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          registry-url: "https://registry.npmjs.org"
          # The setup-node action will automatically use the GITHUB_TOKEN
          # to fetch the OIDC token and handle npm authentication.

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Run build (if needed)
        run: npm run build || echo "No build script found, skipping."

      - name: Update package.json with release tag
        id: prepare_version
        run: |
          # Extract the version from the release tag, removing the 'v' prefix if it exists.
          TAG="${{ github.event.release.tag_name }}"
          VERSION=${TAG#v}
          echo "Release tag: $TAG"
          echo "Extracted version: $VERSION"
          echo "Current package.json version before update:"
          node -p "require('./package.json').version"

          # More explicit version update
          npm pkg set version="$VERSION"

          # Verify the update worked
          UPDATED_VERSION=$(node -p "require('./package.json').version")
          echo "Confirmed updated version: $UPDATED_VERSION"

          if [ "$UPDATED_VERSION" != "$VERSION" ]; then
            echo "ERROR: Version update failed!"
            exit 1
          fi

          echo "Successfully updated package.json to version $VERSION"

      - name: Create pull request for version update
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: Update package.json to version ${{ github.event.release.tag_name }}"
          branch: "chore/release-version-${{ github.event.release.tag_name }}"
          base: ${{ github.event.repository.default_branch }}
          title: "chore: Update version for release ${{ github.event.release.tag_name }}"
          body: |
            This PR automatically updates the package version to match the new release tag.

      - name: Debug package info before publish
        run: |
          echo "=== FINAL PRE-PUBLISH VERIFICATION ==="
          echo "Release tag: ${{ github.event.release.tag_name }}"
          echo "Expected version: ${{ steps.prepare_version.outputs.version }}"
          echo ""
          echo "Package.json version (multiple checks):"
          echo "1. Via node require:"
          node -p "require('./package.json').version"
          echo "2. Via grep:"
          cat package.json | grep '"version"'
          echo "3. Via npm pkg get:"
          npm pkg get version
          echo ""
          echo "Working directory and files:"
          pwd
          ls -la package.json
          echo ""
          echo "What npm will publish (dry run):"
          npm pack --dry-run

      - name: Verify npm authentication
        run: npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to npm
        run: npm publish --access public --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
