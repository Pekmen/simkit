name: Trigger Benchmark

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
        description: "The version that was released"
      is_major_minor:
        required: true
        type: boolean
        description: "Whether this is a major or minor release"

jobs:
  trigger-benchmark:
    if: inputs.is_major_minor
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Trigger benchmark workflow
        id: trigger
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.BENCHMARK_REPO_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository_owner }}/simkit-core-benchmarks/actions/workflows/run-benchmark.yml/dispatches \
            -d '{"ref":"main","inputs":{"version":"${{ inputs.version }}","callback_repo":"${{ github.repository }}","callback_token":"${{ secrets.GITHUB_TOKEN }}"}}'

      - name: Wait for benchmark completion
        run: |
          echo "Waiting for benchmark results..."
          # Wait up to 10 minutes for benchmark completion
          for i in {1..60}; do
            if [ -f "benchmarks/results/v${{ inputs.version }}.json" ]; then
              echo "Benchmark results received!"
              break
            fi
            echo "Waiting for results... (${i}/60)"
            sleep 10
          done

          if [ ! -f "benchmarks/results/v${{ inputs.version }}.json" ]; then
            echo "Benchmark results not received within timeout"
            exit 1
          fi

      - name: Update README with latest results
        run: |
          node benchmarks/update-readme.js

      - name: Commit benchmark results
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          git add benchmarks/results/
          git add README.md

          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "docs: update benchmark results for v${{ inputs.version }}"
            git push
          fi
